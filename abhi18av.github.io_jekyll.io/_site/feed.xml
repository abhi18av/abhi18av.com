<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://abhi18av.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://abhi18av.github.io/" rel="alternate" type="text/html" /><updated>2019-06-22T04:56:25+05:30</updated><id>https://abhi18av.github.io/feed.xml</id><title type="html">Abhinav Sharma</title><subtitle>A blog about Language and Mind.</subtitle><entry><title type="html">A New Hope</title><link href="https://abhi18av.github.io/a-new-hope/" rel="alternate" type="text/html" title="A New Hope" /><published>2017-03-20T20:00:00+05:30</published><updated>2017-03-20T20:00:00+05:30</updated><id>https://abhi18av.github.io/a-new-hope</id><content type="html" xml:base="https://abhi18av.github.io/a-new-hope/">&lt;p&gt;The IILC institute &lt;a href=&quot;&quot;&gt;replied yesterday&lt;/a&gt; and I am somewhat delighted from this gesture. But I’m not sure what am I supposed to do regarding how best can I use this year, my mind filled with lots and lots of question marks and what-ifs regarding my career.&lt;/p&gt;

&lt;p&gt;I do have a certain project in mind regarding the &lt;a href=&quot;&quot;&gt;HOTT book&lt;/a&gt;, &lt;a href=&quot;&quot;&gt;Lean Prover&lt;/a&gt; , &lt;a href=&quot;&quot;&gt;OCaml&lt;/a&gt; and the &lt;a href=&quot;&quot;&gt;Julia&lt;/a&gt; language but the idea is still pretty vague. Thinking this out would require a certain amount of time - something that I’ve almost run out of.&lt;/p&gt;

&lt;p&gt;Moreover I’m now under immense pressure to establish a means of earning and in the worst case scenario - get a job.&lt;/p&gt;

&lt;p&gt;Honestly speaking, my spirits are almost at an all time low now and I did bet everything on the selection in this Masters course and scholarship. Ah, well - shit happens.&lt;/p&gt;

&lt;p&gt;I feel I need a new beginning and something that doesn’t come with as much of a baggage as my previous experience, i.e. Industrial and the Academic - both of which are admittedly quite incomplete but sufficient.&lt;/p&gt;

&lt;p&gt;I’ve really thought things out over the last couple weeks and I’ve decided to shift the major focus on BioInformatics and, if at all possible, solve the questions in the High School/ Engineering mathematics using &lt;a href=&quot;&quot;&gt;SageMath&lt;/a&gt;. BioInformatics seems quite exiting as there are so many aspects of computation that are used to reason about the Biological world and structures. From Algorithms to Big Data Processing and from Image processing to Data Science, almost everything has a certain application in BioInformatics.&lt;/p&gt;

&lt;p&gt;This biggest reason that I’ve explored this one out is that it’s still &lt;em&gt;feels&lt;/em&gt; honest to me. And, believe me, I’d much rather do Data Science or any computer related work for something that’s inspiring and honest. Life is too short to make things that people don’t want, to make Ads, Apps, WebSites.&lt;/p&gt;

&lt;p&gt;I’d not be a part of this frenzy of technology that envokes &lt;em&gt;numbness&lt;/em&gt; in our lives, rather I’d work hard to use the computer principles and the best of my abilities to help understand this world better.&lt;/p&gt;

&lt;p&gt;BioInformatics, it is.&lt;/p&gt;</content><author><name>Abhinav Sharma</name></author><category term="IILC" /><category term="BioInformatics" /><summary type="html">The IILC institute replied yesterday and I am somewhat delighted from this gesture. But I’m not sure what am I supposed to do regarding how best can I use this year, my mind filled with lots and lots of question marks and what-ifs regarding my career.</summary></entry><entry><title type="html">High Expectations</title><link href="https://abhi18av.github.io/high-expectations/" rel="alternate" type="text/html" title="High Expectations" /><published>2017-03-09T20:00:00+05:30</published><updated>2017-03-09T20:00:00+05:30</updated><id>https://abhi18av.github.io/high-expectations</id><content type="html" xml:base="https://abhi18av.github.io/high-expectations/">&lt;p&gt;Yesterday, I as informed that my application and current qualifications aren’t upto the expectations of the Institute. I was sad initially but maybe certain things are beginnings, with the face-lift of the dreaded &lt;em&gt;end&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I’ll put this up here, this is something I feel dissapointed with and by inclination don’t we only share our successes. Well, I’d like to keep this memory of my failure as well - they’re are just as important.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The Examinations Board of the Master of Logic has carefully examined your application for the Master of Logic 2017-2019 and decided not to admit you to this programme.

Some further details can be found in the attached letter.



I am sorry to have to tell you this.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The accompanying PDF being&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The Master of Logic is a highly challenging programme for training students to become researchers in logic, language and computation. It leaves no room to make up for deficiencies.

Unfortunately the fact that your undergraduate degree has no direct relevance to the Master of Logic in combination with both your background in formal logic and your past academic performance did not convince the Examinations Board that you will be able to succeed in this programme.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ve always had this crazy dream of being able to understand symbols, maths and to understand that unconditional truth that it entails. My experience has taught me that I am quite persistent but perhaps not good at all at accepting things.&lt;/p&gt;

&lt;p&gt;My response pretty much summed up my thoughts and plans.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;I understand, and accept, the decision taken by the examinations board regarding my application.

However, I would like to inquire whether it's possible to apply again next year?

I do know it's possible but I certainly can't change my past academic grades. My question is, if I work hard enough on the foundational courses would the committee be willing to weigh it against my past grades?

And, if possible, would any faculty member be able to grace me with a clear answer so as to how can I carve out an achievable goal for the duration of this year?

I am aware that the syllabus and time-table is publicly available. Is it possible to find/gain-access to the previous year examinations papers on the internet or by post?


The reason I ask these questions is that this course is the perfect one that I can think for myself as all other courses are either too inclined towards Linguistic-IT/Computer Science and I'll most likely end up being bored through the duration of the course again.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’ll continue with the course preparations, if I recieve even the slightest guidance from the Institute ( IILC, Amsterdam) and prepare using the &lt;em&gt;Undergraduate Text in Mathematics - Springer&lt;/em&gt; series but if there isn’t any response then I will still most likely do the series in my free time, thought not with the objective of pursuing my Masters but rather only for curiosity.&lt;/p&gt;

&lt;p&gt;I’ll re-orient my career towards BioInformatics ( Genomics).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 19-03-2017&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m glad to say they replied!&lt;/p&gt;

&lt;p&gt;Honestly, speaking this is way more than you’d expect from Indian academia.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
Dear Abhinav,

You are welcome to reapply in the future, and if your application contains new elements, the Admissions Board will evaluate it again.

The criteria that were decisive for the negative decision in your case were academic excellence and logic background. You cannot do much to ameliorate your past grades, so the only thing you can do is work hard on your logic background by following advanced Mathematical Logic courses covering the completness proof of first-order predicate logic and more. If you pass these courses with outstanding grades, and you manage to provide us with some evidence of your academic excellence (publications/grants//awards etc) you could have a chance.

&amp;gt;
&amp;gt; I am aware that the syllabus and time-table is publicly available. Is it possible to find/gain-access to the previous year examinations papers on the internet or by post?

We do not distribute past examinations, but you can have a look at our theses to get an idea of what our students learn: https://www.illc.uva.nl/MScLogic/theses/index.php?showarchive=1

I wish you lots of success with your future academic career.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Abhinav Sharma</name></author><category term="IILC" /><category term="Masters" /><summary type="html">Yesterday, I as informed that my application and current qualifications aren’t upto the expectations of the Institute. I was sad initially but maybe certain things are beginnings, with the face-lift of the dreaded end.</summary></entry><entry><title type="html">Any Language he pleases</title><link href="https://abhi18av.github.io/any-language-he-pleases/" rel="alternate" type="text/html" title="Any Language he pleases" /><published>2017-02-13T20:00:00+05:30</published><updated>2017-02-13T20:00:00+05:30</updated><id>https://abhi18av.github.io/any-language-he-pleases</id><content type="html" xml:base="https://abhi18av.github.io/any-language-he-pleases/">&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Give a man Fortran, he has Fortran.&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;Give a man Lisp, he has any language he pleases! - Guy Steele&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’d say that my drive and search for a good, enabling tool (not perfect, it’s a myth :) ) is hardly over. I’ve been living in &lt;em&gt;confusion&lt;/em&gt; regarding the variety of languages
there is and experimenting with the strength and weaknesses of each language - I’ve become an avid coder on Github. But I honestly feel … I haven’t still realized what 
exactly I need to understand computation and become competent in programming.&lt;/p&gt;

&lt;p&gt;Haskell and Clojure have had a profound impact on my way of approaching programming and made me realize that being mathematically sound and adaptability is something that 
we must cherish. At the same time, I’m definitly in love with Julia for it’s balancing act between different worlds and paradigms of programming a brainchild of programming 
language research, scientific computing and practical engineering. And as I’ve mentioned in my previous posts, it’s not only about these few languages - I’ve also dabbled quite 
substantially in F# and C#, not to forget the venerable Anaconda (python) and who can really overlook JavaScript in out times.&lt;/p&gt;

&lt;p&gt;Thing is, each language has something that doesn’t suit my needs or to be blunt, has something that makes me itchy. Be it lack of tail call optimization, typeclasses, dependent types,
mutual recursion or just good enough libraries and community. What’s the balance of simplicity and something that enables me to explore computation in a practical way.&lt;/p&gt;

&lt;p&gt;I dislike C++ with a certain passion, probably has to do with this language being shoved down the throat of young and innocent programmers. C is definitely tolerable and even a 
necessary evil when it comes to High performance computing. My domain being Linguistics and my nature being less of an engineer and more of an explorer in computing, this is a
recipe for definite confusion :P&lt;/p&gt;

&lt;p&gt;I’d say that if Racket (Scheme) had more mature libraries or a better Clojure like community/tooling, it’d be my dream language.&lt;/p&gt;

&lt;p&gt;Why do I call a minute language - ideal?&lt;/p&gt;

&lt;p&gt;The reason being it’s Lisp DNA and the amazing work done by the community in terms of Type Systems, be it&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Dependent Types&lt;/li&gt;
  &lt;li&gt;Haskell like Hindley-Milner types&lt;/li&gt;
  &lt;li&gt;F* like Higher Kinded types for SAT&lt;/li&gt;
  &lt;li&gt;Prolog like programming&lt;/li&gt;
  &lt;li&gt;Object Oriented Programming&lt;/li&gt;
  &lt;li&gt;Functional Programming&lt;/li&gt;
  &lt;li&gt;Reactive Programming&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The community is doing it all and without even altering the syntax much!&lt;/p&gt;

&lt;p&gt;When I think about how well do I really understand various paradigms of computing and system architecture, I find myself terribly lacking in understanding 
  of not only the basics of Algorithms and Data Structures, System Design but also the very real issues like Compilers, STM, Concurrency, Asynchronous or Reactive programming etc.&lt;/p&gt;

&lt;p&gt;I often feel quite demotivated, given this innate need of mine to be able to explore without being tied down by pradigms. I know I’d have to dabble in a multitude of languages and
  paradigms but I’d atleast make it &lt;em&gt;Simple&lt;/em&gt; through Racket and I’d scale it to my needs through Go-lang. Both of these languages have ambient stillness about them, calmness
  about having done the best they could to facilitate their brand of paradigms and while keeping it all simple and approachable.&lt;/p&gt;

&lt;p&gt;As for my education in other fields and paradigms, I’ve been give Financial Aid in a few Coursera courses ranging from Bioinformatics to 
  Game Design and Web Development, I’d of course complete the courses in these fields as per the requirements of the courses but for my own, 
  I’d work on just two languages, tying them together as tightly as possible - Scheme(Racket) and Go.&lt;/p&gt;</content><author><name>Abhinav Sharma</name></author><category term="Computation" /><category term="ProgLangs" /><summary type="html">Give a man Fortran, he has Fortran.</summary></entry><entry><title type="html">Fitness Log</title><link href="https://abhi18av.github.io/fitness-log/" rel="alternate" type="text/html" title="Fitness Log" /><published>2017-01-06T18:10:00+05:30</published><updated>2017-01-06T18:10:00+05:30</updated><id>https://abhi18av.github.io/fitness-log</id><content type="html" xml:base="https://abhi18av.github.io/fitness-log/">&lt;p&gt;January&lt;/p&gt;

&lt;p&gt;1 =&amp;gt; 00:00:00&lt;/p&gt;

&lt;p&gt;2 =&amp;gt; 00:34:00&lt;/p&gt;

&lt;p&gt;3 =&amp;gt; 00:31:24&lt;/p&gt;

&lt;p&gt;4 =&amp;gt; 00:54:00&lt;/p&gt;

&lt;p&gt;5 =&amp;gt; 00:00:00&lt;/p&gt;

&lt;p&gt;6 =&amp;gt; 00:34:33&lt;/p&gt;

&lt;p&gt;7 =&amp;gt; 00:25:34&lt;/p&gt;

&lt;p&gt;8 =&amp;gt; 00:59:00&lt;/p&gt;

&lt;p&gt;9 =&amp;gt; 00:21:47&lt;/p&gt;

&lt;p&gt;10 =&amp;gt; 00:00:00&lt;/p&gt;

&lt;p&gt;11 =&amp;gt; 00:31:15&lt;/p&gt;

&lt;p&gt;16 =&amp;gt; 00:53:23&lt;/p&gt;

&lt;p&gt;18 =&amp;gt; 00:33:23&lt;/p&gt;

&lt;p&gt;19 =&amp;gt; 00:23:23&lt;/p&gt;

&lt;p&gt;21 =&amp;gt; 00:22:07&lt;/p&gt;

&lt;p&gt;22 =&amp;gt; 00:12:32&lt;/p&gt;

&lt;p&gt;24 =&amp;gt; 00:10:00&lt;/p&gt;

&lt;p&gt;26 =&amp;gt; 00:10:39&lt;/p&gt;

&lt;p&gt;28 =&amp;gt; 00:19:05&lt;/p&gt;

&lt;p&gt;29 =&amp;gt; 00:19:16&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;February&lt;/p&gt;

&lt;p&gt;7 =&amp;gt; 00:20:13&lt;/p&gt;

&lt;p&gt;8 =&amp;gt; 00:18:53&lt;/p&gt;

&lt;p&gt;9 =&amp;gt; 00:10:37&lt;/p&gt;

&lt;p&gt;10 =&amp;gt; 00:22:17&lt;/p&gt;

&lt;p&gt;15 =&amp;gt; 00:10:37&lt;/p&gt;

&lt;p&gt;17 =&amp;gt; 00:10:37&lt;/p&gt;

&lt;p&gt;23 =&amp;gt; 00:10:37&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;March&lt;/p&gt;

&lt;p&gt;7 =&amp;gt; 00:23:07&lt;/p&gt;

&lt;p&gt;8 =&amp;gt; 00:21:18&lt;/p&gt;

&lt;p&gt;16 =&amp;gt; 00:20:39&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;April&lt;/p&gt;

&lt;p&gt;3 =&amp;gt; 00:10:00&lt;/p&gt;

&lt;p&gt;5 =&amp;gt; 00:20:00&lt;/p&gt;

&lt;p&gt;9 =&amp;gt; 00:40:00&lt;/p&gt;

&lt;p&gt;10 =&amp;gt; 00:20:00&lt;/p&gt;

&lt;p&gt;11 =&amp;gt; 00:17:21&lt;/p&gt;

&lt;p&gt;14 =&amp;gt; 00:27:00&lt;/p&gt;

&lt;p&gt;15 =&amp;gt; 00:15:10&lt;/p&gt;

&lt;p&gt;17 =&amp;gt; 00:30:00&lt;/p&gt;

&lt;p&gt;18 =&amp;gt; 00:28:00&lt;/p&gt;

&lt;p&gt;20 =&amp;gt; 00:27:42&lt;/p&gt;

&lt;p&gt;22 =&amp;gt; 00:29:39&lt;/p&gt;

&lt;p&gt;27 =&amp;gt; 00:18:00&lt;/p&gt;

&lt;p&gt;28 =&amp;gt; 00:20:00&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;May&lt;/p&gt;

&lt;p&gt;29 =&amp;gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;PullUps =&amp;gt; 30&lt;/li&gt;
  &lt;li&gt;Short Run =&amp;gt; 10&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;June&lt;/p&gt;

&lt;p&gt;1 =&amp;gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Abs =&amp;gt; 30&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Abhinav Sharma</name></author><category term="Life" /><summary type="html">January</summary></entry><entry><title type="html">Learning How to Learn &amp;amp; A Mind for Numbers</title><link href="https://abhi18av.github.io/learning-how-to-learn-a-mind-for-numbers/" rel="alternate" type="text/html" title="Learning How to Learn &amp; A Mind for Numbers" /><published>2017-01-01T18:10:00+05:30</published><updated>2017-01-01T18:10:00+05:30</updated><id>https://abhi18av.github.io/learning-how-to-learn-a-mind-for-numbers</id><content type="html" xml:base="https://abhi18av.github.io/learning-how-to-learn-a-mind-for-numbers/">&lt;p&gt;Today, I’ve completed the Coursera Course “Learning How to Learn”&lt;/p&gt;

&lt;p&gt;This course is really special!&lt;/p&gt;

&lt;p&gt;I’ve loved every idea that Barbara Oakley and Terrence Sejnowski put forward. The most memorable for me were the priceless interviews - every “High Achievers” got there only because of hard work. Sure, some might have a head start in something but it’s &lt;em&gt;*always*&lt;/em&gt; the case that special thing known by many names - grit, perseverence, will …&lt;/p&gt;

&lt;p&gt;My goal for 2017 is to become a “Learning Machine”&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;master languages, both human and computer ones.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learning is great, but often we forget that - it’s supposed to be fun!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Happy Learning and a Happy New Year :)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Abhinav Sharma</name></author><category term="Art-of-Learning" /><summary type="html">Today, I’ve completed the Coursera Course “Learning How to Learn”</summary></entry><entry><title type="html">Pursuing the Mystery of Languages</title><link href="https://abhi18av.github.io/pursuing-the-mystery-of-languages/" rel="alternate" type="text/html" title="Pursuing the Mystery of Languages" /><published>2016-12-21T00:00:00+05:30</published><updated>2016-12-21T00:00:00+05:30</updated><id>https://abhi18av.github.io/pursuing-the-mystery-of-languages</id><content type="html" xml:base="https://abhi18av.github.io/pursuing-the-mystery-of-languages/">&lt;p&gt;Hii everyone!&lt;/p&gt;

&lt;p&gt;It’s been a while since I last updated you guys on what I’m upto these days
and trust me, I’ve been working really hard to find a solution to this &lt;em&gt;analysis paralysis&lt;/em&gt; , as it applies to my needs and goals. As I write this, I feel that this one will be an echo of my innermost thoughts and the hard decisions I’ve made to pursue this goal - understanding languages.&lt;/p&gt;

&lt;p&gt;I feel that there’re only a few places left for mankind to be those glorious explorers again - Biology, Space, the Deep Seas and the Mind.&lt;/p&gt;

&lt;p&gt;Recently, I attented my convocation and got the degree that &lt;em&gt;makes&lt;/em&gt; me an engineer. I met so many friends and I wasn’t entirely happy, I felt deeply anxious. You see, as a 20-something I.T. graduate the &lt;em&gt;traditional and easy&lt;/em&gt;
career path for me would be to just join an I.T. firm, code for a couple years and then start climbing the organization hierarchy. I could pursue my education in a much more &lt;em&gt;“acceptable”&lt;/em&gt; way by going for an M.B.A degree. Give or take 4-5 years I’d be married and off to this journey called family-life. And I was involved with a startup in my last year in University, but I’ve elaborate on that in some other post - the gist is, it wasn’t meaningful enough for &lt;em&gt;me&lt;/em&gt; - not profound enough to make me work harder that I ever did.&lt;/p&gt;

&lt;p&gt;That’s exactly the path that almost &lt;em&gt;all&lt;/em&gt; of my friends and acquiantances took, right now the best possible near-sighted situation ( &lt;strong&gt;the reality&lt;/strong&gt; for neighbors and relatives) is that my friends are moving forward in their careers while I’m at home trying to pursue something that few can understand. And I won’t deny that it’s hard, it’s a hot-bed for insecurity and not-so-healthy feelings and the mind does wander away into this &lt;em&gt;comparative&lt;/em&gt; mode of thinking, putting me against everyone. It doesn’t help that I’ve always been competitive by nature. But, I hold my breadth and I’m still onto this goal to understand languages.&lt;/p&gt;

&lt;p&gt;The thing is, sure I can have a really convenient life, a job or business position that gives me &lt;em&gt;social-stature&lt;/em&gt; but I’ve never been the one to neglect that naive feeling of &lt;em&gt;there must be something more&lt;/em&gt;! Foolish, though it may seem but this one desire has always been my North star, this desire to be contribute to something greater, to experience profundity has been the thought that drives me - often crazy - but eventually forward.&lt;/p&gt;

&lt;p&gt;Sure, I have the very same skill-set that one needs to make all this awesome stuff that technology brings to our lives but, to me that’s like building toys for short-lived amusement. Sure, it’s outrageously hilarious but seldom … profound.&lt;/p&gt;

&lt;p&gt;In terms of what I feel I’ve accomplished so far since the time at Uni.
it’s been a mixed feeling as I’ve failed a lot! One of the reason being I’ve tried a lot many things, different things like&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What exactly I wish to do in Linguistics.&lt;/li&gt;
  &lt;li&gt;Above all &lt;strong&gt;Learning how to Read Code&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve geniunely put a wager on my career and IILC is &lt;em&gt;exactly&lt;/em&gt; what I want, let me put it out in unambigious terms - “I need the scholarship to study Logic and Language in Amsterdam, I shall complete my masters from IILC”&lt;/p&gt;

&lt;p&gt;Right now, I’ve thoroughly understood the value of &lt;em&gt;using the right tool for the job&lt;/em&gt; and &lt;em&gt;having preferences&lt;/em&gt; for programming languages and technology - &lt;em&gt;not obsessions&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And what I’ve learned that even though there are a few trade-offs involved with platforms like JVM and dotNET, like wise with languages like Julia, Haskell, Ruby etc. I need to weigh my options in terms of how well I can create a coherent set of integrated and &lt;em&gt;practical&lt;/em&gt; tools which help me understand and explore languages in the most lucid and fluid way.&lt;/p&gt;

&lt;p&gt;Working on creating a couple projects - funneled down after a lot of random walks. And the major focus is of course laying the foundations for a way to ask questions from a language in a meaningful way.&lt;/p&gt;

&lt;p&gt;Learning Chinese and Dutch using every possible thing I can think of - I’ll start posting things in Chinese and Dutch soon enough. I must become good as fast as I can, the scholarship is my best shot forward. I can’t say there won’t be failures but, damn &lt;strong&gt;Truth be told, I’m dead set on this one thing, I’ll make it come true.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Abhinav Sharma</name></author><category term="Computation" /><summary type="html">Hii everyone!</summary></entry><entry><title type="html">Tatoeba and OrientDB, Database for Computational Linguistics - 1</title><link href="https://abhi18av.github.io/tatoeba-and-orientdb-database-for-computational-linguistics-1/" rel="alternate" type="text/html" title="Tatoeba and OrientDB, Database for Computational Linguistics - 1 " /><published>2016-12-17T20:10:00+05:30</published><updated>2016-12-17T20:10:00+05:30</updated><id>https://abhi18av.github.io/tatoeba-and-orientdb-database-for-computational-linguistics-1</id><content type="html" xml:base="https://abhi18av.github.io/tatoeba-and-orientdb-database-for-computational-linguistics-1/">&lt;p&gt;It’s been a couple months since I’ve started to focus exclusively on languages, not from an application oriented approach but from a research oriented perspective. And then slowly, I’ve carved out a path that seems the most sensible to me as a whole. Of course there’re always many (many!) trade-offs involved in making such decisions - what doesn’t?&lt;/p&gt;

&lt;p&gt;I’ve been working exclusively with OrientDB as a database, hoping to build around this database a comfortable environment to carry on my linguistics experiments. I’ve found that “my language is the best” has been nothing but limiting. Btw, when I say language - I do mean both, the human and the programming ones.&lt;/p&gt;

&lt;p&gt;Though, I’ve never really been a huge fan of “one-human-language” and that has slowly proved itself true, even for programming languages. I was exclusively a Pythonista and only later did I realize that even though LISP is how my mind really loves programming, there’s no point sticking to one language. Rather than falling in love with the programming language - fall in love with the whole art of problem solving. Languages come and go!&lt;/p&gt;

&lt;p&gt;I haven’t had much experience with Databases so far and much like my first programming language C++ ( gasp!), the little exposure I had regarding MySQL database in University curicullum left me nauseated. It’s only with Neo4J that I’d start to actually believe that “Hey, databases are cool!” - especially the NoSQL ones. Now that I’ve wisened up a bit, I realize that it’d be a mistake on my part to try to solve every Database problem with just one kind of Database. Sure, I have my preferences but that’s all it is - preferences.&lt;/p&gt;

&lt;p&gt;Knowing full well the trade-offs I make regarding the Tech. Stack of my project I’d much rather stick with something I actually enjoy working with. This turned out to be&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OrientDB&lt;/li&gt;
  &lt;li&gt;Linguistics&lt;/li&gt;
  &lt;li&gt;JVM languages&lt;/li&gt;
  &lt;li&gt;Python ( Anaconda flavor)&lt;/li&gt;
  &lt;li&gt;True Recursion ( via dotNET’s F#)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Eventually, I’d like to have a comfortable &lt;em&gt;lab&lt;/em&gt; to test out various theories and hypothesis that I come across in Computational Linguistics papers. Though the priority would be to continue working with the University Project i.e. &lt;strong&gt;Language, Space and Mind - Paul Chilton&lt;/strong&gt; and try to take the theory outlined to it’s logical conclusion.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can a language be visualized?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is there a Geometry in linguistic meaning i.e. semantics?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m working towards something like a  single ruby script that sets up everything like -
a) Downloading the latest csv from the Tatoeba database
b) Set up the pre-requisite JVM, Python and dotNET languages
c) Set up the Database&lt;/p&gt;

&lt;p&gt;Once the environment is set-up correctly, Clojure based scripting environment which takes care of the fluid thought like nature of code and exploration, designed in a way that it’s easy to &lt;em&gt;pick the right tool for the algorithmic problem&lt;/em&gt; be it Haskell, Anaconda, F# or Ruby.&lt;/p&gt;

&lt;div class=&quot;language-clojure highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;analyze&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sentence-analyzer-function&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:sentence-id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:lang-tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the &lt;strong&gt;analyzer&lt;/strong&gt; function, I’d be able to rely on the best tool for the job, be it the True Recursion offered by F# ( from dotNET world) or Laziness and Purity for Mathematical modeling of the domain, massive parallelism or just plain old playing with the data. And, of course, we mustn’t forget the Golden Rule of science “Stand on the shoulders of Giants to see farther than anyone” i.e. build on the work already done by people, perhaps in the form of the fantastic libraries.&lt;/p&gt;

&lt;p&gt;I do believe that something like a Virtual Machine Image and a Docker would be important as I absolutely wish to make the entire thing well-documented and easily-reproducible.&lt;/p&gt;

&lt;p&gt;P.S. Of course, &lt;strong&gt;all my work would always be open source.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Abhinav Sharma</name></author><category term="Computation" /><category term="IILC" /><category term="Masters" /><summary type="html">It’s been a couple months since I’ve started to focus exclusively on languages, not from an application oriented approach but from a research oriented perspective. And then slowly, I’ve carved out a path that seems the most sensible to me as a whole. Of course there’re always many (many!) trade-offs involved in making such decisions - what doesn’t?</summary></entry><entry><title type="html">A Linguist’s scratchpad - Spacemacs</title><link href="https://abhi18av.github.io/a-linguist-s-scratchpad/" rel="alternate" type="text/html" title="A Linguist's scratchpad - Spacemacs" /><published>2016-12-14T00:00:00+05:30</published><updated>2016-12-14T00:00:00+05:30</updated><id>https://abhi18av.github.io/a-linguist-s-scratchpad</id><content type="html" xml:base="https://abhi18av.github.io/a-linguist-s-scratchpad/">&lt;p&gt;We as language lovers and linguists, cherish the ability to Using multiple scripts and languages we come in touch everyday and running across some font or language which can’t be handleded by our text editors or programs is a major turn-off.&lt;/p&gt;

&lt;p&gt;Should we always wait for Microsoft or Google or some such to add support for a new language - often without any idea when it’s gonna happen? Oh c’mon, we’re better than that.&lt;/p&gt;

&lt;p&gt;If you ever find yourself dabbling in more than one language ( or say 4 or more) then I have the perfect gift for you! Do have a look at Spacemacs!&lt;/p&gt;

&lt;p&gt;Apart from every imaginable keyboard configuration for all scripts there’s a wonderful IPA mode in Spacemacs, in with have-your-preferences baked right in.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vanilla IPA mode&lt;/li&gt;
  &lt;li&gt;IPA-kirshenbaum mode&lt;/li&gt;
  &lt;li&gt;IPA-x-sampa ( Using J.C. Wells’ X-SAMPA )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;“Vim and Emacs are like Sharks, perfect by design” - Anonymous&lt;/p&gt;

&lt;p&gt;“The best editor is neither Vim or Emacs - it’s Vim and Emacs” - Spacemacs&lt;/p&gt;</content><author><name>Abhinav Sharma</name></author><category term="Computation" /><summary type="html">We as language lovers and linguists, cherish the ability to Using multiple scripts and languages we come in touch everyday and running across some font or language which can’t be handleded by our text editors or programs is a major turn-off.</summary></entry><entry><title type="html">Open Source champions - Microsoft</title><link href="https://abhi18av.github.io/open-source-champions-microsoft/" rel="alternate" type="text/html" title="Open Source champions - Microsoft" /><published>2016-12-02T03:17:00+05:30</published><updated>2016-12-02T03:17:00+05:30</updated><id>https://abhi18av.github.io/open-source-champions-microsoft</id><content type="html" xml:base="https://abhi18av.github.io/open-source-champions-microsoft/">&lt;p&gt;I’m quite sure that for most of the world, the computer software meant pretty much the Microsoft logo at startup. That’s how we grew up, with Microsoft - Apple was a luxury and Linux was something that only “techies” did. The impact of Microsoft has been so widespread that ever more popular softwares like MS Word, PowerPoint etc are pretty much synonyms for word editing and presentation softwares.&lt;/p&gt;

&lt;p&gt;But Microsoft’s history attitude has always been that of “my way or the highway”. It basically gave a not-so-generous hand gesture to the Open Source world and guarded the inevitable bugs in it’s software as something that happens only with &lt;em&gt;“lesser companies”&lt;/em&gt;. Needless to say that such an attitude is fundamentally elitist, denied equality and above all promoted intellectual dishonesty. But those were the days of the past…&lt;/p&gt;

&lt;p&gt;Fast forward to 2016, Google and Facebook have become the darlings of the Open Source world through their commitment in sharing the advances they make with code, the solutions that they have come up for various problems. Things like ReactJS and TensorFlow which basically &lt;strong&gt;are&lt;/strong&gt; at the core these giants - they’ve shared it with the world as well. Sharing the source opens it up to endless possibilities of improvements and above all it provides a huge incentive for people to learn and contribute in making the code even better!&lt;/p&gt;

&lt;p&gt;The thing is, Microsoft missed out on so many things with Mobile, Scientific and dotNet - Microsoft made so many promising technologies and starts but it was the attitude of “it’s my way” that took them out of the good graces of public.&lt;/p&gt;

&lt;p&gt;I’m really happy to have seen how the policies and attitude of the this Giant has changed, for the better. Now it’s &lt;em&gt;the&lt;/em&gt; most heavyweight contributor to open source on Github and it continues to provide free up baseline products like Visual Studio and  dotNet!&lt;/p&gt;

&lt;p&gt;As I mentioned in the previous post, it’s this wonderful attitude towards the community that can help Microsoft become that beloved tech. giant that it’s supposed to be. The world is too neatly divided between Google and Facebook there days and we know that healthy competition does everyone some good!&lt;/p&gt;</content><author><name>Abhinav Sharma</name></author><category term="Echo" /><summary type="html">I’m quite sure that for most of the world, the computer software meant pretty much the Microsoft logo at startup. That’s how we grew up, with Microsoft - Apple was a luxury and Linux was something that only “techies” did. The impact of Microsoft has been so widespread that ever more popular softwares like MS Word, PowerPoint etc are pretty much synonyms for word editing and presentation softwares.</summary></entry><entry><title type="html">JVM for Linguistic Research</title><link href="https://abhi18av.github.io/jvm-for-linguistic-research/" rel="alternate" type="text/html" title="JVM for Linguistic Research" /><published>2016-11-26T00:00:00+05:30</published><updated>2016-11-26T00:00:00+05:30</updated><id>https://abhi18av.github.io/jvm-for-linguistic-research</id><content type="html" xml:base="https://abhi18av.github.io/jvm-for-linguistic-research/">&lt;p&gt;The JVM ( Java Virtual Machine ) is a fantastic platform!&lt;/p&gt;

&lt;p&gt;You get to use the same underlying techniques, methods, algorithms with the languages which facilitates problem solving from the git go! You know, I’ve experimented with languages like Haskell, Rust, C++ and of course JavaScript - to name the most popular ones. The biggest challenge I faced as a beginner in these languages was the vastly different documentation, in addition to the syntax and niche. So, maybe (even sub-consciously) I started looking for some sense of uniformity with my workflow.&lt;/p&gt;

&lt;p&gt;The problem is essentially reduced to the best way of exploring a problem, looking at it from so the viewpoint which reduces it to something simple and avoids the incidental complexity introduced by the &lt;em&gt;way&lt;/em&gt; we do things. And once the problem has been explored and understood well enough, solidified as it seems to me. We can code it up using the “industrial standard” Java language or one of the JVM heavyweights like Scala and Clojure.&lt;/p&gt;

&lt;p&gt;Unlike C/C++ java is less of a niche language - in the sense that, the use of C/C++ has mostly remained popular in Game Development and memory-intensive tasks or say even construction of Virtual Machines like JVM, C/C++ are hardly the ideal languages to &lt;em&gt;explore computing&lt;/em&gt; which requires a certain level of abstraction.&lt;/p&gt;

&lt;p&gt;Plus it’s not as if we have to give up game development in Java, there actually are fantastic game engines in Java like JMonkeyEngine, LWGL and the most popular one being LibGDX. Though, to be honest C++ is the lingua franca of the two most popular and recently open-sourced game engines like Unreal Engine and CryEngine. And how can we forget the ever-more popular Unity engine which chose to go with the C# (.NET world). But I’d say depending upon the needs of a solo game designer or explorer Java is a much better option than .NET ( well, maybe for the next 10 years atleast ;P ).&lt;/p&gt;

&lt;p&gt;The JVM languages which I find to be insanely awesome and useful ( subjective, I know ) give me the freedom to choose the best tool for the job and yet staying really close to practicality in skills and essence which essentially is an argument against relying too much on Racket language (in my case) - which is an absolutely brilliant piece of work and a joy to use but it doesn’t pay off in the &lt;em&gt;real world&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For my Linguistic work on the JVM I definitely need&lt;/p&gt;

&lt;p&gt;Jruby       - Python/ Ruby
Scala       - F#
Clojure     - Racket ( LISP )
Frege       - Haskell
Java        - Java :p&lt;/p&gt;

&lt;p&gt;For the non-JVM languages &lt;em&gt;Python&lt;/em&gt; or rather &lt;em&gt;Anaconda&lt;/em&gt; is the one I absolutely love! Btw, if you find yourself really hoping to work with the .NET - I highly recommend the Clojure and F# combination&lt;/p&gt;

&lt;p&gt;Coming back to JVM, it’s a fantastic technology and yes, it’s a complex ecosystem and a constantly evolving environment (with not so popular Tech. Giant at the top) (with not so popular Tech. Giant at the top) (with not so popular Tech. Giant at the top) (with not so popular Tech. Giant at the top) (with not so popular Tech. Giant at the top) (with not so popular Tech. Giant at the top) (with not so popular Tech. Giant at the top) (with not so popular Tech. Giant at the top) (with not so popular Tech. Giant at the top) - but it’s fun to learn within a familiar ecosystem. For any of these JVM languages, there’s the vary same JavaDoc that serves the purpose - Sweet!&lt;/p&gt;

&lt;p&gt;I hope that the academia is listening, it sure uses all these languages alot, for various contexts like industrial research and programming language design I’m absoltely fascinated by the jvm now, enchanted by the JVM and the possibilities it opens up for me.&lt;/p&gt;

&lt;p&gt;Did I mention that with Clojure  you get ClojureScript for free! Boom - no JavaScript for
large projects, maybe a few snippets here and there but largely you’d be completely liberated. Oh, there’s ScalaJS as well which relies on the fantastic features of the Scala language design and brings it to the web. I just looks a lot more tasteful to me than TypeScript or anything else - apart from ClojureScript that is.&lt;/p&gt;</content><author><name>Abhinav Sharma</name></author><category term="IILC" /><category term="Linguistics" /><summary type="html">The JVM ( Java Virtual Machine ) is a fantastic platform!</summary></entry></feed>